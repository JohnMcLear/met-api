// Generated by CoffeeScript 1.6.1
(function() {
  var MetApi, should;

  MetApi = require("../lib/index");

  should = require("should");

  describe("Met Office API module", function() {
    var metApi;
    metApi = null;
    afterEach(function() {
      return metApi = null;
    });
    describe("when instantiated", function() {
      it("constructor should return a new instance of MetApi", function() {
        metApi = new MetApi("apikey");
        return metApi.constructor.name.should.equal("MetApi");
      });
      it("constructor should set api key", function() {
        metApi = new MetApi("apikey");
        return metApi.apiKey.should.equal("apikey");
      });
      return it("constructor should throw error if api key parameter not a string", function(done) {
        (function() {
          return new MetApi();
        }).should["throw"]("apiKey is a required parameter");
        return done();
      });
    });
    return describe("_getLocationId", function() {
      metApi = new MetApi("46fc7ec8-e920-4b07-8244-eab69debd27b");
      return it("should have a private method _getLocationId", function() {
        return metApi._getLocationId.should.exist;
      });
    });
  });

}).call(this);
